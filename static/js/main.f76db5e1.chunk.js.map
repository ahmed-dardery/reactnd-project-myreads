{"version":3,"sources":["utils/BooksAPI.js","BookShelfChanger.js","BookView.js","LoadingIcon.js","BookGrid.js","BookShelf.js","Library.js","SearchBooks.js","DetailedBookView.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookShelfChanger","_this$props","this","props","onChange","shelvesList","selected","react_default","a","createElement","className","value","event","target","disabled","map","key","shelfID","shelfTitle","React","Component","BookView","onShelfChange","_props$book","title","authors","imageLinks","thumbnail","replace","react_router_dom","to","style","backgroundImage","src_BookShelfChanger","join","LoadingIcon","viewBox","cx","cy","r","fill","stroke","strokeWidth","BookGrid","shelves","onBookShelfChange","customEmptyMessage","loading","SortedBooks","sort","b","localeCompare","src_LoadingIcon_0","length","src_BookView","BookShelf","src_BookGrid","filter","Library","system","hidden","src_BookShelf","SearchBooks","state","_this","setState","clearTimeout","queryTimeOut","setTimeout","trim","BooksAPI","ret","error","_this2","type","placeholder","DetailedBookView","bookId","bookID","catch","goBack","_this$state","onClick","subtitle","categories","averageRating","ratingsCount","pageCount","description","BooksApp","prevState","cur","find","v","toConsumableArray","_this3","react_router","render","_ref","history","location","URLSearchParams","get","src_DetailedBookView","push","pathname","exact","path","_ref2","src_Library","src_SearchBooks","reduce","acc","defineProperty","ReactDOM","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f76db5e1.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n    token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n    'Accept': 'application/json',\r\n    'Authorization': token\r\n};\r\n\r\nexport const get = (bookId) =>\r\n    fetch(`${api}/books/${bookId}`, {headers})\r\n        .then(res => res.json())\r\n        .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n    fetch(`${api}/books`, {headers})\r\n        .then(res => res.json())\r\n        .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n    fetch(`${api}/books/${book.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            ...headers,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({shelf})\r\n    }).then(res => res.json());\r\n\r\nexport const search = (query) =>\r\n    fetch(`${api}/search`, {\r\n        method: 'POST',\r\n        headers: {\r\n            ...headers,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({query})\r\n    }).then(res => res.json())\r\n        .then(data => data.books);\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BookShelfChanger extends React.Component {\r\n\r\n    render() {\r\n        const {onChange, shelvesList} = this.props;\r\n        let {selected} = this.props;\r\n        selected = selected || 'none';\r\n        const YES_MARK = '✔', NO_MARK = '　 ';\r\n        return (\r\n            <div className=\"book-shelf-changer\">\r\n                <select value={selected}\r\n                        onChange={(event) => onChange(event.target.value)}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    {\r\n                        shelvesList.map(shelf =>\r\n                            <option key={shelf.shelfID} value={shelf.shelfID}>\r\n                                {`${shelf.shelfID === selected ? YES_MARK : NO_MARK} ${shelf.shelfTitle}`}\r\n                            </option>\r\n                        )\r\n                    }\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBookShelfChanger.propTypes = {\r\n    selected: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    shelvesList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default BookShelfChanger;","import React from 'react';\r\nimport BookShelfChanger from \"./BookShelfChanger\";\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst BookView = (props) => {\r\n    const {shelf, onShelfChange, shelvesList} = props;\r\n    const {title, authors} = props.book;\r\n    const {imageLinks} = props.book;\r\n    const thumbnail = imageLinks ? imageLinks.thumbnail.replace('http://','https://') : '';\r\n\r\n    return (\r\n        <div className=\"book\">\r\n            <div className=\"book-top\">\r\n                <Link to={{search: `?book=${props.book.id}`}}><div className=\"book-cover\" style={{'backgroundImage': `url(${thumbnail})`}}/></Link>\r\n                <BookShelfChanger shelvesList={shelvesList} selected={shelf || 'none'} onChange={onShelfChange}/>\r\n            </div>\r\n            <div className=\"book-title\">{title}</div>\r\n            <div className=\"book-authors\">{authors && authors.join(', ')}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBookView.propTypes = {\r\n    shelf: PropTypes.string,\r\n    onShelfChange: PropTypes.func.isRequired,\r\n    book: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        authors: PropTypes.array,\r\n        imageLinks: PropTypes.shape({\r\n            thumbnail: PropTypes.string.isRequired\r\n        })\r\n    }).isRequired,\r\n    shelvesList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default BookView;","import React from \"react\";\r\nimport './LoadingIcon.css';\r\n\r\nconst LoadingIcon = () => {\r\n    return (\r\n        <div className=\"loading-icon-holder\">\r\n        <div className=\"loading-icon\">\r\n            <svg viewBox=\"0 0 50 50\">\r\n                <circle className=\"loading-icon-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"#60ac5d\" strokeWidth=\"2\"/>\r\n            </svg>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingIcon;","import React from 'react';\r\nimport BookView from \"./BookView\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nconst BookGrid = (props) => {\r\n    const {shelf, shelves, onBookShelfChange, shelvesList, customEmptyMessage, loading} = props;\r\n\r\n    let SortedBooks = props.books || [];\r\n    SortedBooks.sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n    if (loading)\r\n        return <LoadingIcon/>;\r\n    else\r\n        return (\r\n            <ol className=\"books-grid\">\r\n                {SortedBooks.length === 0 ?\r\n                    <div className=\"books-grid-empty\">{customEmptyMessage || `Phew, looks a bit too empty!`}</div> :\r\n                    SortedBooks.map(book =>\r\n                        <li key={book.id}>\r\n                            <BookView shelvesList={shelvesList} onShelfChange={(value) => onBookShelfChange(book, value)}\r\n                                      shelf={shelf || shelves[book.id]}\r\n                                      book={book}/>\r\n                        </li>\r\n                    )}\r\n            </ol>\r\n        );\r\n};\r\n\r\nBookGrid.propTypes = {\r\n    books: PropTypes.array,\r\n    onBookShelfChange: PropTypes.func.isRequired,\r\n    shelf: PropTypes.string,\r\n    shelves: PropTypes.object,\r\n    shelvesList: PropTypes.array.isRequired,\r\n    customEmptyMessage: PropTypes.string,\r\n};\r\nexport default BookGrid;","import React, {Component} from 'react';\r\nimport BookGrid from './BookGrid'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BookShelf extends Component {\r\n    render() {\r\n        const {shelf, books, onBookShelfChange, shelvesList, loading} = this.props;\r\n\r\n        return (\r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{shelf.shelfTitle}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <BookGrid loading={loading} shelvesList = {shelvesList} onBookShelfChange={onBookShelfChange} shelf={shelf.shelfID}\r\n                              books={books.filter(book => book.shelf === shelf.shelfID)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nBookShelf.propTypes = {\r\n    shelf: PropTypes.shape({\r\n        shelfID: PropTypes.string,\r\n        shelfTitle: PropTypes.string,\r\n    }).isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    onBookShelfChange: PropTypes.func.isRequired,\r\n    shelvesList: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool,\r\n};\r\n\r\nexport default BookShelf;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport BookShelf from \"./BookShelf\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Library extends Component {\r\n\r\n    render() {\r\n        const {books, onBookShelfChange, shelvesList, loading} = this.props;\r\n        return (<div>\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>My Reads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <div>\r\n                        {shelvesList.map(shelf => !shelf.system && !shelf.hidden &&\r\n                            <BookShelf loading={loading} shelvesList={shelvesList} key={shelf.shelfID}\r\n                                       onBookShelfChange={onBookShelfChange}\r\n                                       books={books} shelf={shelf}/>)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link className=\"open-search-button\" to=\"/search\">Add a book</Link>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nLibrary.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    onBookShelfChange: PropTypes.func.isRequired,\r\n    shelvesList: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool,\r\n    query: PropTypes.string,\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }).isRequired\r\n};\r\n\r\nexport default Library;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport BookGrid from \"./BookGrid\";\r\nimport * as BooksAPI from \"./utils/BooksAPI\";\r\n\r\nclass SearchBooks extends Component {\r\n    state = {\r\n        query: '',\r\n        books: [],\r\n        loading: false\r\n    };\r\n    onChange = (query) => {\r\n        this.setState(() => ({query, loading: true}));\r\n        clearTimeout(this.queryTimeOut);\r\n        this.queryTimeOut = setTimeout(() => this.search(query.trim()), 500);\r\n    };\r\n    search = (query) => {\r\n        query ? BooksAPI.search(query).then((ret) =>\r\n            this.setState({books: ret.error ? [] : ret, loading: false})\r\n        ) : this.setState({books: [], loading: false})\r\n    };\r\n\r\n    render() {\r\n        const {shelves, onBookShelfChange, shelvesList} = this.props;\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to='/' className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input onChange={event => this.onChange(event.target.value)} type=\"text\"\r\n                               placeholder=\"Search by title or author\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <BookGrid loading = {this.state.loading} customEmptyMessage={!this.state.loading && this.state.query.trim().length===0?\" \":\"No books found!\"} shelvesList ={shelvesList} shelves={shelves} books={this.state.books} onBookShelfChange={onBookShelfChange}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSearchBooks.propTypes = {\r\n    shelves: PropTypes.object.isRequired,\r\n    onBookShelfChange: PropTypes.func.isRequired,\r\n    shelvesList: PropTypes.array.isRequired\r\n\r\n};\r\n\r\nexport default SearchBooks;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as BooksAPI from \"./utils/BooksAPI\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nclass DetailedBookView extends React.Component {\r\n    state = {\r\n        book: {},\r\n        loading: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {bookID} = this.props;\r\n        BooksAPI.get(bookID).then((book) => {\r\n            this.setState({book, loading: false});\r\n        }).catch(() => this.props.goBack());\r\n    }\r\n\r\n    render() {\r\n        const {goBack} = this.props;\r\n        const {book, loading} = this.state;\r\n\r\n        const {imageLinks} = book;\r\n        const thumbnail = imageLinks ? imageLinks.thumbnail.replace('http://', 'https://') : '';\r\n        return (\r\n            <div>\r\n                <div onClick={() => goBack()} className=\"book-details-background\"/>\r\n                <div className=\"book-details-box\">\r\n                    {loading ?   <div className=\"book-details\"><LoadingIcon/></div> :\r\n                        <div className=\"book-details\">\r\n                            <div className=\"book-details-top\">\r\n                                <div className=\"book-top\">\r\n                                    <div className=\"book-cover\"\r\n                                         style={{'backgroundImage': `url(${thumbnail})`}}/>\r\n                                </div>\r\n                                <div className=\"book-details-info\">\r\n                                    <b><div className=\"book-title\">{book.title}</div></b>\r\n                                    <div className=\"book-subtitle\">{book.subtitle}</div>\r\n                                    <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\r\n                                    {book.categories && <div className=\"book-title\">Category: {book.categories.join(', ')}</div>}\r\n                                    {book.averageRating && <div className=\"book-title\">Rating: {`${book.averageRating} stars - ${book.ratingsCount} rating(s)`}</div>}\r\n                                    {book.pageCount && <div className=\"book-title\">{book.pageCount} Pages</div>}\r\n                                </div>\r\n                            </div>\r\n                            {book.description && <div>\r\n                                <h2>Description</h2>\r\n                                {book.description};\r\n                            </div>}\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDetailedBookView.propTypes = {\r\n    goBack: PropTypes.func.isRequired,\r\n    bookID: PropTypes.string.isRequired,\r\n};\r\nexport default DetailedBookView;","import React from 'react'\r\nimport './App.css'\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport * as BooksAPI from './utils/BooksAPI'\r\n\r\nimport Library from \"./Library\";\r\nimport SearchBooks from \"./SearchBooks\";\r\nimport DetailedBookView from \"./DetailedBookView\";\r\n\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        books: [],\r\n        shelves: [],\r\n        shelvesList: [\r\n            {\r\n                shelfID: 'currentlyReading',\r\n                shelfTitle: 'Currently Reading'\r\n            },\r\n            {\r\n                shelfID: 'wantToRead',\r\n                shelfTitle: 'Want to Read'\r\n            },\r\n            {\r\n                shelfID: 'read',\r\n                shelfTitle: 'Read'\r\n            },\r\n            /*{\r\n                shelfID: 'favorite',\r\n                shelfTitle: 'Favorites'\r\n            },*/\r\n            {\r\n                shelfID: 'none',\r\n                shelfTitle: 'None',\r\n                system: true,\r\n            }\r\n        ]\r\n    };\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({books, loading: false})\r\n        });\r\n    }\r\n\r\n    onBookShelfChange = (book, shelf) => {\r\n        book.shelf = shelf;\r\n\r\n        this.setState(prevState => {\r\n            let cur = prevState.books.find(v => v.id === book.id);\r\n            if (cur) {\r\n                cur.shelf = shelf;\r\n                return prevState;\r\n            } else\r\n                return {books: [...prevState.books, book]};\r\n        });\r\n        BooksAPI.update(book, shelf);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"app\">\r\n                <Route render={({history, location}) => {\r\n                    const test = new URLSearchParams(location.search);\r\n                    const query = test.get(\"book\");\r\n                    return query && <DetailedBookView goBack={()=>history.push(location.pathname)} bookID={query}/>;\r\n                }}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\"\r\n                           render={({location, history}) =>\r\n                               <Library history={history} query={location.search} loading={this.state.loading}\r\n                                        shelvesList={this.state.shelvesList}\r\n                                        onBookShelfChange={this.onBookShelfChange} books={this.state.books}/>\r\n                           }>\r\n                    </Route>\r\n                    <Route exact path=\"/search\"\r\n                           render={() =>\r\n                               <SearchBooks shelvesList={this.state.shelvesList} shelves={\r\n                                   this.state.books.reduce((acc, cur) => ({...acc, [cur.id]: cur.shelf}), {})\r\n                               } onBookShelfChange={this.onBookShelfChange}/>\r\n                           }/>\r\n                    <Route render={() => <div>404 Page Not Found!</div>}/>\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))"],"sourceRoot":""}